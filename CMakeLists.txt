# CMakeFiles.txt for the classify
#
# Vladimir S. FONOV - vladimir.fonov@gmail.com

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(glim_image)

#SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake-modules")
# ENABLE_TESTING()
# INCLUDE(CTest)

#ADD_SUBDIRECTORY( doc )

# Packaging defines
SET(CPACK_GENERATOR TGZ)
SET(CPACK_PACKAGE_VERSION_MAJOR 1)
SET(CPACK_PACKAGE_VERSION_MINOR 2)
SET(CPACK_PACKAGE_VERSION_PATCH 00)
INCLUDE(CPack)


SET(PACKAGE "glim_image")
SET(PACKAGE_BUGREPORT "jason@bic.mni.mcgill.ca")

SET(PACKAGE_NAME "glim_image")
SET(PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")

FIND_PACKAGE( MINC2 REQUIRED )
INCLUDE( ${MINC2_USE_FILE} )
LINK_LIBRARIES(${VOLUME_IO_LIBRARIES} ${MINC2_LIBRARIES})

ADD_DEFINITIONS(-DHAVE_CONFIG_H)

# add for building relocatable library
# IF(UNIX)
#   SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
#   SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
# ENDIF(UNIX)

# aliases
SET(VERSION "${PACKAGE_VERSION}")


# check for prereqs
# INCLUDE(CheckFunctionExists)
# INCLUDE(CheckIncludeFiles)

# CHECK_FUNCTION_EXISTS(finite   HAVE_FINITE)
# CHECK_FUNCTION_EXISTS(isfinite HAVE_ISFINITE)

# CHECK_INCLUDE_FILES(sys/dir.h   HAVE_SYS_DIR_H)
# CHECK_INCLUDE_FILES(sys/stat.h  HAVE_SYS_STAT_H)
# CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
# CHECK_INCLUDE_FILES(unistd.h    HAVE_UNISTD_H)
# CHECK_INCLUDE_FILES(memory.h    HAVE_MEMORY_H)
# CHECK_INCLUDE_FILES(malloc.h    HAVE_MALLOC_H)
# CHECK_INCLUDE_FILES(stdlib.h    HAVE_STDLIB_H)
# CHECK_INCLUDE_FILES(inttypes.h  HAVE_INTTYPES_H)
# CHECK_INCLUDE_FILES(string.h    HAVE_STRING_H)
# CHECK_INCLUDE_FILES(strings.h   HAVE_STRINGS_H)

# others
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/config.h.cmake ${CMAKE_BINARY_DIR}/config.h)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/epm-header.in  ${CMAKE_BINARY_DIR}/epm-header)
# SET(PERL ${PERL_EXECUTABLE})
INCLUDE_DIRECTORIES( ${CMAKE_BINARY_DIR} ${CMAKE_SOURCE_DIR} )

ADD_EXECUTABLE(glim_image glim.c 
  glim_image.c 
  matrix.c 
  smoothness.c
  glim.h 
  matrix.h 
  smoothness.h )


INSTALL(TARGETS 
  glim_image 
  DESTINATION bin)

#TODO install models 

# testing
# IF(BUILD_TESTING)
#   #ADD_SUBDIRECTORY( testing )
# ENDIF(BUILD_TESTING)
